function [hl,hlc] = plot_trajectory_percentiles(H,prob_min,solvers_to_plot,m)

% H - nf x np x ns array generated by run
% prob_min - np length array of minimum problem data
% solvers_to_plot - indices (3rd dim of H) to show in plot
colors=get(gca,'colororder');
lines={'-','-.','--'};
markers={'s','o','^','v','p','<','x','h','+','d','*'};
LW=2;
FS=16;
MS=8;
transparency = 0.2; 

% for clear plots:
%H(find(H<2e-32)) = 2e-32;
[nf,~,~] = size(H); % Grab the dimensions
xaxis = (1:nf)/m;

% Produce a suitable history array with sorted entries:
for j = solvers_to_plot
    for i = 2:nf
      H(i,:,j) = min(H(i,:,j),H(i-1,:,j));
    end
end

ns = length(solvers_to_plot);
l = 1;
for s = solvers_to_plot % each solver     
    data = H(:,:,s)'-repmat(prob_min',1,nf);
    low = prctile(data,10);
    med = prctile(data,50);
    upp = prctile(data,90);
    for i = 2:nf
        if med(i) == 0
            med(i) = med(i-1);
        end
    end
    hl(l) = semilogy(xaxis,med,'LineWidth',LW,'LineStyle','-','Color',colors(mod(l-1,ns)+1,:),...
        'MarkerSize',MS,'Marker',markers{mod(l-1,ns)+1},'MarkerIndices',floor(linspace(1,nf,10)),...
        'MarkerFaceColor',colors(mod(l-1,ns)+1,:),'MarkerEdgeColor',colors(mod(l-1,ns)+1,:));

    hold on
    for i = 2:nf
        if low(i) == 0
            low(i) = low(i-1);
        end
        if upp(i) == 0
            upp(i) = upp(i-1);
        end
    end
    hlc(l) = fill([xaxis,fliplr(xaxis)],[low,fliplr(upp)],colors(mod(l-1,7)+1,:));
    set(hlc(l),'FaceAlpha',transparency,'EdgeColor',colors(mod(l-1,7)+1,:));
    
    semilogy(xaxis,low,'LineWidth',LW-1,'LineStyle','--','Color',colors(mod(l-1,ns)+1,:));
    semilogy(xaxis,upp,'LineWidth',LW-1,'LineStyle','--','Color',colors(mod(l-1,ns)+1,:));

    l = l + 1;
end

ax = gca;
xlim(ax,[0,nf/m]);
%ylim(ax,[yl_min,yl_max])
%set(ax,'YTick',linspace(yl_min,yl_max,10))




end